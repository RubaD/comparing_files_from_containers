---
 - hosts: all
   tasks:

   - name: Include vars
     include_vars:
       file: containers.yml

   - name: Get infos on container
     docker_container_info:
      name: "{{item['container']}}"
     register: result
     with_items:
       - "{{ containers }}"
     when: item.hostGroup in group_names 

   - name: get files secontext
     shell:
       cmd: docker exec "{{item.0['container']}}"  ls -lZ "{{item.0['file_path']}}"
     register: files_context
     with_together:
       - "{{ containers }}"
       - "{{ result.results }}"
     when: item.0.hostGroup in group_names and  item.1.container.State.Status == 'running'

   - name: copy files from containers
     shell: docker cp "{{item.0['container']}}":"{{item.0['file_path']}}" "{{location}}"
     with_together:
       - "{{ containers }}"
       - "{{ result.results }}"

     when: item.0.hostGroup in group_names and  item.1.container.State.Status == "running"

   - name: copy files from remote nodes
     fetch:
       src: "{{location}}/{{item.0['file_name']}}"
       dest: "{{location}}/{{item.0['container']}}/{{item.0['file_path']}}"
       flat: yes
     with_together:
       - "{{ containers }}"
       - "{{ result.results }}"
     when: item.0.hostGroup in group_names and  item.1.container.State.Status == "running"
     
   - shell:
       cmd: chcon "{{ item.0['stdout'].split()[4]}}" "{{location}}/{{item.1['container']}}/{{item.1['file_path']}}"
     with_together:
        - "{{files_context['results']}}" 
        - "{{ containers }}"
        - "{{ result.results }}"
     when:  item.1.hostGroup in group_names and  item.2.container.State.Status == "running"
     delegate_to: localhost 

   - debug:
       msg: " {{item.0['container']}} is not running "
     with_together:
       - "{{ containers }}"
       - "{{ result.results }}"
     when:   item.0.hostGroup in group_names and  item.1.container.State.Status != "running" 

